import java.net.URL

database(
        url = "jdbc:postgresql://postgres.local.yawk.at/java-browser",
        user = "java-browser",
        password = "password"
)

artifacts {
    val openjdkMetadata = ArtifactMetadata(
            logoUrl = "https://openjdk.java.net/images/openjdk.png",
            licenses = listOf(ArtifactMetadata.License(
                    name = "GPLv2 + Classpath Exception",
                    url = "https://openjdk.java.net/legal/gplv2+ce.html"
            )),
            url = "https://openjdk.java.net/"
    )
    oldJava(version = "8", src = "/usr/lib/jvm/java-8-openjdk/src.zip", metadata = openjdkMetadata)
    java(version = "10", baseDir = "/usr/lib/jvm/java-10-openjdk", metadata = openjdkMetadata)
    java(version = "11", baseDir = "/usr/lib/jvm/java-11-openjdk", metadata = openjdkMetadata)
    java(version = "12", baseDir = "/usr/lib/jvm/java-12-openjdk", metadata = openjdkMetadata)
    java(version = "13", baseDir = "/usr/lib/jvm/java-13-openjdk", metadata = openjdkMetadata)

    android(
            version = "android-9.0.0_r35",
            repos = listOf(
                    ArtifactConfig.GitRepo(
                            url = URL("https://android.googlesource.com/platform/frameworks/base"),
                            tag = "android-9.0.0_r35"
                    ),
                    ArtifactConfig.GitRepo(
                            url = URL("https://android.googlesource.com/platform/system/vold"),
                            tag = "android-9.0.0_r35"
                    )
            ),
            metadata = ArtifactMetadata(
                    logoUrl = "https://upload.wikimedia.org/wikipedia/commons/d/db/Android_robot_2014.svg",
                    licenses = listOf(
                            ArtifactMetadata.License(
                                    name = "GPLv2 + Classpath Exception",
                                    url = "https://openjdk.java.net/legal/gplv2+ce.html"
                            ),
                            ArtifactMetadata.License(
                                    name = "Apache 2.0",
                                    url = "http://www.apache.org/licenses/LICENSE-2.0"
                            )
                    ),
                    url = "https://source.android.com/"
            )
    )

    maven("com.google.guava", "guava", "25.1-jre")
    maven("com.google.guava", "guava", "27.1-jre")
    maven("com.google.code.findbugs", "jsr305", "3.0.2")

    val junit4Meta = ArtifactMetadata(logoUrl = "https://junit.org/junit4/images/junit-logo.png")
    maven("junit", "junit", "4.12", metadata = junit4Meta)
    val junit5Meta = ArtifactMetadata(logoUrl = "https://junit.org/junit5/assets/img/junit5-logo.png")
    maven("org.junit.jupiter", "junit-jupiter-api", "5.4.1", metadata = junit5Meta)
    maven("org.junit.jupiter", "junit-jupiter-engine", "5.4.1", metadata = junit5Meta)

    maven("org.hamcrest", "hamcrest-all", "1.3")

    val slf4jMeta = ArtifactMetadata(logoUrl = "https://www.slf4j.org/images/logos/slf4j-logo.jpg")
    maven("org.slf4j", "slf4j-api", "1.7.25", metadata = slf4jMeta)
    maven("org.slf4j", "slf4j-api", "1.7.26", metadata = slf4jMeta)
    maven("org.slf4j", "slf4j-simple", "1.7.26", metadata = slf4jMeta)
    maven("commons-io", "commons-io", "2.6")
    maven("commons-codec", "commons-codec", "1.12")
    maven("org.apache.commons", "commons-collections4", "4.3")
    maven("org.apache.commons", "commons-math3", "3.6.1")
    maven("org.apache.commons", "commons-compress", "1.18")
    val log4j2Meta = ArtifactMetadata(logoUrl = "https://logging.apache.org/log4j/2.x/images/logo.png")
    maven("org.apache.logging.log4j", "log4j-core", "2.11.0", metadata = log4j2Meta)
    maven("org.apache.logging.log4j", "log4j-core", "2.12.0", metadata = log4j2Meta)
    maven("org.apache.logging.log4j", "log4j-api", "2.12.0", metadata = log4j2Meta)
    maven("ch.qos.logback", "logback-classic", "1.2.3")
    maven("org.apache.commons", "commons-lang3", "3.7")
    maven("commons-lang", "commons-lang", "2.6")
    for (jacksonVersion in listOf("2.9.5", "2.10.1")) {
        maven("com.fasterxml.jackson.core", "jackson-databind", jacksonVersion)
        maven("com.fasterxml.jackson.core", "jackson-annotations", jacksonVersion)
        maven("com.fasterxml.jackson.core", "jackson-core", jacksonVersion)
        maven("com.fasterxml.jackson.datatype", "jackson-datatype-jdk8", jacksonVersion)
        maven("com.fasterxml.jackson.datatype", "jackson-datatype-jsr310", jacksonVersion)
        maven("com.fasterxml.jackson.dataformat", "jackson-dataformat-yaml", jacksonVersion)
        maven("com.fasterxml.jackson.dataformat", "jackson-dataformat-xml", jacksonVersion)
        maven("com.fasterxml.jackson.module", "jackson-module-jaxb-annotations", jacksonVersion)
    }
    val nettyMeta = ArtifactMetadata(logoUrl = "https://netty.io/images/logo.png")
    maven("io.netty", "netty-all", "4.1.25.Final", metadata = nettyMeta) {
        alias("io.netty", "netty-buffer")
        alias("io.netty", "netty-codec")
        alias("io.netty", "netty-codec-dns")
        alias("io.netty", "netty-codec-haproxy")
        alias("io.netty", "netty-codec-http")
        alias("io.netty", "netty-codec-http2")
        alias("io.netty", "netty-codec-memcache")
        alias("io.netty", "netty-codec-mqtt")
        alias("io.netty", "netty-codec-redis")
        alias("io.netty", "netty-codec-smtp")
        alias("io.netty", "netty-codec-socks")
        alias("io.netty", "netty-codec-stomp")
        alias("io.netty", "netty-codec-xml")
        alias("io.netty", "netty-common")
        alias("io.netty", "netty-handler")
        alias("io.netty", "netty-handler-proxy")
        alias("io.netty", "netty-resolver")
        alias("io.netty", "netty-resolver-dns")
        alias("io.netty", "netty-transport")
        alias("io.netty", "netty-transport-rxtx")
        alias("io.netty", "netty-transport-sctp")
        alias("io.netty", "netty-transport-udt")
        alias("io.netty", "netty-example")
    }
    maven("io.undertow", "undertow-core", "2.0.9.Final")
    maven("org.jboss.xnio", "xnio-api", "3.6.3.Final")
    maven("org.jboss.xnio", "xnio-nio", "3.6.3.Final")
    maven("org.jboss.logging", "jboss-logging", "3.3.2.Final")
    maven("io.undertow", "undertow-servlet", "2.0.9.Final")
    maven("org.jboss.spec.javax.servlet", "jboss-servlet-api_4.0_spec", "1.0.0.Final")
    maven("org.jboss.spec.javax.servlet", "jboss-servlet-api_3.1_spec", "1.0.2.Final")
    maven("org.jdbi", "jdbi", "2.78")
    val jdbiMeta = ArtifactMetadata(logoUrl = "http://jdbi.org/images/logo.svg")
    maven("org.jdbi", "jdbi3-core", "3.3.0", metadata = jdbiMeta)
    maven("org.jdbi", "jdbi3-core", "3.8.2", metadata = jdbiMeta)
    maven("org.jdbi", "jdbi3-sqlobject", "3.8.2", metadata = jdbiMeta)
    maven("org.jdbi", "jdbi3-guava", "3.8.2", metadata = jdbiMeta)
    maven("org.jdbi", "jdbi3-testing", "3.8.2", metadata = jdbiMeta)
    maven("org.jdbi", "jdbi3-postgres", "3.8.2", metadata = jdbiMeta)
    maven("org.jdbi", "jdbi3-json", "3.8.2", metadata = jdbiMeta)
    maven("org.jdbi", "jdbi3-jodatime2", "3.8.2", metadata = jdbiMeta)
    maven("org.freemarker", "freemarker", "2.3.28", metadata = ArtifactMetadata(logoUrl = "https://freemarker.apache.org/logo.png"))
    maven("org.testng", "testng", "6.14.3")
    val hibernateMeta = ArtifactMetadata(logoUrl = "http://hibernate.org/images/hibernate-logo.svg")
    maven("org.hibernate", "hibernate-core", "5.3.1.Final", metadata = hibernateMeta)
    maven("org.hibernate.validator", "hibernate-validator", "6.0.16.Final", metadata = hibernateMeta)
    maven("javax.persistence", "javax.persistence-api", "2.2")
    maven("org.hibernate", "hibernate-entitymanager", "4.3.11.Final", metadata = hibernateMeta)
    maven("org.hibernate", "hibernate-core", "4.3.11.Final", metadata = hibernateMeta)
    maven("org.openjdk.jmh", "jmh-core", "1.21")
    maven("org.bouncycastle", "bcprov-jdk15", "1.46")
    maven("org.bouncycastle", "bcprov-jdk15on", "1.61")
    val asmMeta = ArtifactMetadata(logoUrl = "https://asm.ow2.io/asm-logo.svg")
    for (asmVersion in listOf("6.2.1", "7.1")) {
        maven("org.ow2.asm", "asm", asmVersion, metadata = asmMeta)
        maven("org.ow2.asm", "asm-tree", asmVersion, metadata = asmMeta)
        maven("org.ow2.asm", "asm-commons", asmVersion, metadata = asmMeta)
        maven("org.ow2.asm", "asm-util", asmVersion, metadata = asmMeta)
    }
    maven("cglib", "cglib", "3.3.0")
    maven("joda-time", "joda-time", "2.10")
    maven("org.jboss.resteasy", "resteasy-jaxrs", "3.6.1.Final", metadata = ArtifactMetadata(logoUrl = "http://design.jboss.org/resteasy/logo/images/resteasy_logo_600x.svg"))
    maven("io.projectreactor", "reactor-core", "3.2.1.RELEASE")
    maven("org.reactivestreams", "reactive-streams", "1.0.2")
    val eclipseCollectionsMeta = ArtifactMetadata(logoUrl = "https://www.eclipse.org/collections/img/eclipse-collections-logo.png")
    maven("org.eclipse.collections", "eclipse-collections", "9.2.0", metadata = eclipseCollectionsMeta)
    maven("org.eclipse.collections", "eclipse-collections-api", "9.2.0", metadata = eclipseCollectionsMeta)
    maven("org.eclipse.collections", "eclipse-collections", "10.0.0", metadata = eclipseCollectionsMeta)
    maven("org.eclipse.collections", "eclipse-collections-api", "10.0.0", metadata = eclipseCollectionsMeta)
    maven("com.squareup.okhttp3", "okhttp", "3.12.0")
    maven("com.lmax", "disruptor", "3.4.2")
    maven("org.openjfx", "javafx-base", "11")
    maven("org.openjfx", "javafx-controls", "11")
    maven("com.google.code.gson", "gson", "2.8.5")
    maven("org.apache.httpcomponents", "httpclient", "4.5.7")

    val springMeta = ArtifactMetadata(logoUrl = "https://spring.io/img/spring-by-pivotal-9066b55828deb3c10e27e609af322c40.png")
    maven("org.springframework", "spring-context", "5.1.5.RELEASE", metadata = springMeta)
    maven("org.springframework", "spring-aop", "5.1.5.RELEASE", metadata = springMeta)
    maven("org.springframework", "spring-beans", "5.1.5.RELEASE", metadata = springMeta)
    maven("org.springframework", "spring-core", "5.1.5.RELEASE", metadata = springMeta)
    maven("org.springframework", "spring-expression", "5.1.5.RELEASE", metadata = springMeta)
    maven("org.springframework", "spring-web", "5.1.5.RELEASE", metadata = springMeta)
    maven("org.springframework", "spring-webmvc", "5.1.5.RELEASE", metadata = springMeta)
    maven("org.springframework", "spring-orm", "5.1.5.RELEASE", metadata = springMeta)
    maven("org.springframework", "spring-jdbc", "5.1.5.RELEASE", metadata = springMeta)
    maven("org.springframework", "spring-tx", "5.1.5.RELEASE", metadata = springMeta)
    maven("org.springframework", "spring-jcl", "5.1.5.RELEASE", metadata = springMeta)
    maven("org.springframework", "spring-instrument", "5.1.5.RELEASE", metadata = springMeta)
    maven("org.springframework", "spring-oxm", "5.1.5.RELEASE", metadata = springMeta)
    maven("org.springframework", "spring-context-support", "5.1.5.RELEASE", metadata = springMeta)

    maven("org.projectlombok", "lombok", "1.18.6")
    maven("com.h2database", "h2", "1.4.199", metadata = ArtifactMetadata(logoUrl = "http://h2database.com/html/images/h2-logo-2.png"))
    maven("com.google.inject", "guice", "4.2.2")
    val ebeanMeta = ArtifactMetadata(logoUrl = "https://raw.githubusercontent.com/ebean-orm/website-source/master/images/logo-200.png")
    maven("io.ebean", "ebean", "11.36.4", metadata = ebeanMeta)
    maven("io.ebean", "ebean-annotation", "4.7", metadata = ebeanMeta)
    maven("io.ebean", "persistence-api", "2.2.2", metadata = ebeanMeta)
    maven("io.ebean", "ebean-datasource", "4.5.1", metadata = ebeanMeta)
    maven("io.ebean", "ebean-types", "1.3", metadata = ebeanMeta)
    maven("org.yaml", "snakeyaml", "1.24")
    val byteBuddyMeta = ArtifactMetadata(logoUrl = "http://bytebuddy.net/images/logo-orange.png")
    maven("net.bytebuddy", "byte-buddy-dep", "1.9.12", metadata = byteBuddyMeta)
    maven("net.bytebuddy", "byte-buddy-agent", "1.9.12", metadata = byteBuddyMeta)
    maven("com.jcraft", "jsch", "0.1.55")
    val antlrMeta = ArtifactMetadata(logoUrl = "https://raw.githubusercontent.com/antlr/website-antlr4/gh-pages/images/antlr-logo.png")
    maven("org.antlr", "antlr4", "4.7.2", metadata = antlrMeta)
    maven("org.antlr", "antlr4-runtime", "4.7.2", metadata = antlrMeta)
    maven("org.antlr", "antlr-runtime", "3.5.2", metadata = antlrMeta)
    maven("org.antlr", "antlr", "3.5.2", metadata = antlrMeta)
    maven("org.antlr", "ST4", "4.1", metadata = ArtifactMetadata(logoUrl = "https://www.stringtemplate.org/images/st-logo.png"))
    maven("com.zaxxer", "HikariCP", "3.3.1", metadata = ArtifactMetadata(logoUrl = "https://raw.githubusercontent.com/wiki/brettwooldridge/HikariCP/Hikari.png"))
    maven("com.jayway.jsonpath", "json-path", "2.4.0")
    maven("net.minidev", "json-smart", "2.3")
    maven("net.minidev", "accessors-smart", "1.2")
    val ehcacheMeta = ArtifactMetadata(logoUrl = "http://www.ehcache.org/images/Ehcache_Logo.png")
    maven("org.ehcache.modules", "ehcache-api", "3.7.1", metadata = ehcacheMeta)
    maven("org.ehcache.modules", "ehcache-impl", "3.7.1", metadata = ehcacheMeta)
    maven("org.ehcache.modules", "ehcache-core", "3.7.1", metadata = ehcacheMeta)
    maven("org.ehcache.modules", "ehcache-common", "3.7.1", metadata = ehcacheMeta)
    maven("org.ehcache.modules", "ehcache-xml", "3.7.1", metadata = ehcacheMeta)
    maven("org.ehcache.modules", "ehcache-management", "3.7.1", metadata = ehcacheMeta)
    maven("org.ehcache.modules", "ehcache-107", "3.7.1", metadata = ehcacheMeta)
    maven("org.terracotta", "offheap-store", "2.4.3")
    maven("org.terracotta", "statistics", "2.1")
    maven("javax.cache", "cache-api", "1.1.1")
    maven("com.netflix.concurrency-limits", "concurrency-limits-core", "0.3.2")
    maven("com.netflix.concurrency-limits", "concurrency-limits-servlet", "0.3.2")
    maven("org.postgresql", "postgresql", "42.2.6")
    maven("com.github.spotbugs", "spotbugs-annotations", "3.1.12")
    val poiMeta = ArtifactMetadata(logoUrl = "https://poi.apache.org/images/project-header.png")
    maven("org.apache.poi", "poi", "4.1.0", metadata = poiMeta)
    maven("org.apache.poi", "poi-ooxml", "4.1.0", metadata = poiMeta)
    maven("io.vertx", "vertx-core", "3.8.0")
    maven("io.vertx", "vertx-unit", "3.8.0")
    maven("io.vertx", "vertx-web", "3.8.0")
    maven("io.vertx", "vertx-web-common", "3.8.0")
    maven("io.vertx", "vertx-auth-common", "3.8.0")
    maven("io.vertx", "vertx-bridge-common", "3.8.0")
    maven("io.vertx", "vertx-codegen", "3.8.0")
    maven("io.vertx", "vertx-rx-java2", "3.8.0")
    maven("io.reactivex.rxjava2", "rxjava", "2.2.11")
    maven("io.reactiverse", "reactive-pg-client", "0.11.4")
    maven("com.github.purejavacomm", "purejavacomm", "1.0.2.RELEASE")
    maven("org.apache.avro", "avro", "1.9.1", metadata = ArtifactMetadata(logoUrl = "https://avro.apache.org/images/avro-logo.png"))
    val jettyMeta = ArtifactMetadata(logoUrl = "https://www.eclipse.org/jetty/images/jetty-logo-80x22.png")
    maven("org.eclipse.jetty", "jetty-server", "10.0.0-alpha0", metadata = jettyMeta)
    maven("org.eclipse.jetty", "jetty-http", "10.0.0-alpha0", metadata = jettyMeta)
    maven("org.eclipse.jetty", "jetty-io", "10.0.0-alpha0", metadata = jettyMeta)
    maven("org.eclipse.jetty", "jetty-jmx", "10.0.0-alpha0", metadata = jettyMeta)
    maven("org.eclipse.jetty", "jetty-util", "10.0.0-alpha0", metadata = jettyMeta)
    val tomcatMeta = ArtifactMetadata(logoUrl = "https://tomcat.apache.org/res/images/tomcat.png")
    maven("org.apache.tomcat", "tomcat-catalina", "9.0.26", metadata = tomcatMeta)
    maven("org.apache.tomcat", "tomcat-servlet-api", "9.0.26", metadata = tomcatMeta)
    maven("org.apache.tomcat", "tomcat-jsp-api", "9.0.26", metadata = tomcatMeta)
    maven("org.apache.tomcat", "tomcat-el-api", "9.0.26", metadata = tomcatMeta)
    maven("org.apache.tomcat", "tomcat-juli", "9.0.26", metadata = tomcatMeta)
    maven("org.apache.tomcat", "tomcat-annotations-api", "9.0.26", metadata = tomcatMeta)
    maven("org.apache.tomcat", "tomcat-api", "9.0.26", metadata = tomcatMeta)
    maven("org.apache.tomcat", "tomcat-jni", "9.0.26", metadata = tomcatMeta)
    maven("org.apache.tomcat", "tomcat-coyote", "9.0.26", metadata = tomcatMeta)
    maven("org.apache.tomcat", "tomcat-util", "9.0.26", metadata = tomcatMeta)
    maven("org.apache.tomcat", "tomcat-util-scan", "9.0.26", metadata = tomcatMeta)
    maven("org.apache.tomcat", "tomcat-jaspic-api", "9.0.26", metadata = tomcatMeta)
    maven("org.eclipse.jgit", "org.eclipse.jgit", "5.5.0.201909110433-r")
    maven("org.apache.xmlgraphics", "batik-svggen", "1.11")
    maven("org.apache.xmlgraphics", "batik-util", "1.11")
    maven("org.apache.xmlgraphics", "batik-awt-util", "1.11")
    maven("org.apache.xmlgraphics", "batik-constants", "1.11")
    maven("org.apache.xmlgraphics", "batik-i18n", "1.11")
    maven("org.apache.xmlgraphics", "batik-svg-dom", "1.11")
    maven("org.apache.xmlgraphics", "batik-bridge", "1.11")
    maven("org.apache.xmlgraphics", "batik-css", "1.11")
    maven("org.apache.xmlgraphics", "batik-dom", "1.11")
    maven("org.apache.xmlgraphics", "batik-ext", "1.11")
    maven("org.apache.xmlgraphics", "batik-parser", "1.11")
    maven("org.apache.xmlgraphics", "batik-anim", "1.11")
    maven("org.apache.xmlgraphics", "batik-gvt", "1.11")
    maven("org.apache.xmlgraphics", "batik-script", "1.11")
    maven("org.apache.xmlgraphics", "batik-transcoder", "1.11")
    maven("org.apache.xmlgraphics", "batik-extension", "1.11")
    maven("org.apache.xmlgraphics", "xmlgraphics-commons", "2.3")
    maven("org.apache.xmlgraphics", "fop", "2.3")
    maven("xalan", "xalan", "2.7.2")
    maven("xalan", "serializer", "2.7.2")
    maven("xml-apis", "xml-apis", "1.4.01")
    maven("org.apache.lucene", "lucene-core", "8.2.0")
    maven("org.apache.lucene", "lucene-queryparser", "8.2.0")
    maven("org.apache.lucene", "lucene-highlighter", "8.2.0")
    maven("org.apache.lucene", "lucene-queries", "8.2.0")
    maven("org.apache.lucene", "lucene-sandbox", "8.2.0")
    maven("org.apache.lucene", "lucene-analyzers-common", "8.2.0")
    maven("org.apache.lucene", "lucene-memory", "8.2.0")
    maven("org.apache.lucene", "lucene-misc", "8.2.0")
    maven("org.apache.lucene", "lucene-spatial", "8.2.0")
    maven("org.apache.lucene", "lucene-suggest", "8.2.0")
    maven("org.apache.lucene", "lucene-codecs", "8.2.0")
    maven("org.apache.lucene", "lucene-join", "8.2.0")
    maven("org.apache.lucene", "lucene-grouping", "8.2.0")
    maven("org.apache.lucene", "lucene-backward-codecs", "8.2.0")
    maven("org.apache.lucene", "lucene-expressions", "8.2.0")
    maven("org.apache.lucene", "lucene-facet", "8.2.0")
    maven("org.apache.lucene", "lucene-spatial-extras", "8.2.0")
    maven("org.apache.lucene", "lucene-analyzers-kuromoji", "8.2.0")
    maven("org.apache.lucene", "lucene-analyzers-phonetic", "8.2.0")
    maven("org.apache.lucene", "lucene-analyzers-smartcn", "8.2.0")
    maven("org.apache.lucene", "lucene-analyzers-icu", "8.2.0")
    maven("org.apache.lucene", "lucene-analyzers-stempel", "8.2.0")
    maven("org.apache.lucene", "lucene-analyzers-nori", "8.2.0")
    maven("org.apache.lucene", "lucene-analyzers-morfologik", "8.2.0")
    maven("org.apache.lucene", "lucene-spatial3d", "8.2.0")
    maven("org.apache.lucene", "lucene-classification", "8.2.0")
    maven("org.jboss.shrinkwrap", "shrinkwrap-api", "1.2.6")
    maven("org.jboss.shrinkwrap", "shrinkwrap-spi", "1.2.6")
    maven("org.jboss.shrinkwrap", "shrinkwrap-impl-base", "1.2.6")
    maven("org.jboss.shrinkwrap.resolver", "shrinkwrap-resolver-impl-maven", "3.1.3")

    val mavenMeta = ArtifactMetadata(logoUrl = "https://maven.apache.org/images/maven-logo-black-on-white.png")
    maven("org.apache.maven.resolver", "maven-resolver-api", "1.4.1", metadata = mavenMeta)
    maven("org.apache.maven.resolver", "maven-resolver-impl", "1.4.1", metadata = mavenMeta)
    maven("org.apache.maven.resolver", "maven-resolver-spi", "1.4.1", metadata = mavenMeta)
    maven("org.apache.maven.resolver", "maven-resolver-util", "1.4.1", metadata = mavenMeta)
    maven("org.apache.maven.resolver", "maven-resolver-connector-basic", "1.4.1", metadata = mavenMeta)
    maven("org.apache.maven.resolver", "maven-resolver-transport-wagon", "1.4.1", metadata = mavenMeta)
    for (mavenWagonVersion in listOf("2.12", "3.3.4")) {
        maven("org.apache.maven.wagon", "wagon-provider-api", mavenWagonVersion, metadata = mavenMeta)
        maven("org.apache.maven.wagon", "wagon-file", mavenWagonVersion, metadata = mavenMeta)
        maven("org.apache.maven.wagon", "wagon-http-lightweight", mavenWagonVersion, metadata = mavenMeta)
        maven("org.apache.maven.wagon", "wagon-http-shared", mavenWagonVersion, metadata = mavenMeta)
    }
    maven("org.apache.maven", "maven-artifact", "3.6.2", metadata = mavenMeta)
    maven("org.apache.maven", "maven-builder-support", "3.6.2", metadata = mavenMeta)
    maven("org.apache.maven", "maven-repository-metadata", "3.6.2", metadata = mavenMeta)
    maven("org.apache.maven", "maven-settings", "3.6.2", metadata = mavenMeta)
    maven("org.apache.maven", "maven-settings-builder", "3.6.2", metadata = mavenMeta)
    val plexusMeta = ArtifactMetadata(logoUrl = "https://codehaus-plexus.github.io/images/plexus-logo-trans.png")
    maven("org.codehaus.plexus", "plexus-interpolation", "1.26", metadata = plexusMeta)
    maven("org.codehaus.plexus", "plexus-utils", "3.3.0", metadata = plexusMeta)
    maven("org.sonatype.plexus", "plexus-sec-dispatcher", "1.4", metadata = plexusMeta)
    maven("org.sonatype.plexus", "plexus-cipher", "1.7", metadata = plexusMeta)
    maven("org.codehaus.plexus", "plexus-classworlds", "2.6.0", metadata = plexusMeta)

    maven("org.jsoup", "jsoup", "1.12.1")
}